// http://ionicframework.com/docs/v2/theming/


// App Global Sass
// --------------------------------------------------
// Put style rules here that you want to apply globally. These
// styles are for the entire app and not just one component.
// Additionally, this file can be also used as an entry point
// to import other Sass files to be included in the output CSS.
//
// Shared Sass variables, which can be used to adjust Ionic's
// default Sass variables, belong in "theme/variables.scss".
//
// To declare rules for a specific mode, create a child rule
// for the .md, .ios, or .wp mode classes. The mode class is
// automatically applied to the <body> element in the app.

chooseFriends {
	.friends__list .item .checkbox {
		margin-right: 8px;
	}
}

.fill-primary, .fill-primaryDark, .fill-grey {
	fill-rule: evenodd;
}

.fill-primary {
	fill: $svg-fill-primary;
}

.fill-primaryDark {
	fill: $svg-fill-primaryDark;
}

.fill-grey {
	fill: $svg-fill-grey;
}

main-menu[ion-fixed] {
	position: fixed;
	bottom: 0;
	width: 100%;
}

ion-spinner {
	overflow: hidden;
}

ion-fab[fixed] {
	position: fixed;
}

.has-main-menu .scroll-content {
	padding-bottom: 100px;
}

ion-fab-list[side="top"] {
	flex-direction: row;
	margin-left: -21px;
	margin-bottom: 73px;

	button:first-child {
		margin-right: 20px;
	}

	button:last-child {
		margin-left: 20px;
	}
}

.hexagon-wrap {
	position: relative;
}

.hexagon {
	height: 80px;

	svg {
		height: 80px;
	}

	.border {
		fill: map-get($colors, primary);
	}
	.content {
		fill: #fff;
	}
}

.hexagon--green .border {
	fill: map-get($colors, green) !important;
}

.hexagon__button {
	position: absolute;
	top: 50%;
	left: 50%;
	margin: -23px 0 0 -20px;
	width: 40px;
	height: 46px;
	text-align: center;

	background: transparent !important;
	color: map-get($colors, grey);

	.fab-close-icon {
		line-height: 43px !important;
	}

	.button-effect {
		display: none !important;
		visibility: hidden !important;
	}
}

.hexagon__button--medium {
	width: 50px !important;
	height: 57px !important;
}

.hexagon--fab {
	padding: 4px;
	.hexagon__button {
		width: 66px !important;
		height: 77px !important;
	}

	.fab-close-icon {
		line-height: 77px !important;
	}
}

.clean-input-wrap {
	.item-inner {
		box-shadow: none !important;
		border: none !important;
	}
}

.hexagon__image {
	width: 54px !important;
	height: 62px !important;

	.border {
		fill: map-get($colors, grey);
	}
}

.hexagon--border {
	.border {
		fill: map-get($colors, grey);
	}
}

.hexagon__image--active .border {
	fill: map-get($colors, green);
}

.hexagon__image--large {
	width: 152px !important;
	height: 175px !important;
}

.hexagon__image--medium {
	width: 27px !important;

	min-width: 0 !important;
	min-height: 0 !important;
}

.hexagon__image--small {
	width: 24px !important;
	height: 26px !important;

	.hexagon__image__image {
		top: 1px; left: 1px;

		height: calc(100% - 2px) !important;
		width: calc(100% - 2px) !important;
	}
}

.checkbox-hexagon {
	margin-right: 34px !important;

	.checkbox-icon {
		border-radius: 0;
		border: none !important;
		background-color: transparent;
		background-image: url("../assets/icon/checkbox_empty.svg") !important;
		background-size: 100% !important;
		background-repeat: no-repeat !important;
		height: 22px !important;
		width: 20px !important;
	}

	.checkbox-inner {
		border: none !important;
	}

	.checkbox-checked {
		background-image: url("../assets/icon/checkbox_checked.svg") !important;
	}
}

.toolbar-content {
	display: flex;
	align-items: center;
}

.text-primary {
	color: map-get($colors, primary);
}

.text-grey {
	color: map-get($colors, grey);
}

.text-medium {
	font-weight: 400;
}

.space-for-fab {
	margin-bottom: 95px;
}

.spinner--full {
	width: 100%;
}

.md .spinner--full circle {
	stroke: map-get($colors, primary);
}

.tutorial {
	width: 100%;
	height: 100%;
	background-color: rgba(0,0,0,.8);
	z-index: 100;
	display: block;
	position: absolute;
	left: 0;
	top: 0;

	img {
		max-width: 100%;
		border: 0;
		max-height: 100%;
		position: absolute;
		bottom: 0;
		left: 50%;
		transform: translateX(-50%);
	}
}

.ios .alert-head {
	color: map-get($colors, dark);
}

.alert-button-danger {
	color: map-get($colors, danger) !important;
	font-weight: normal !important;
}

// action sheet cancel text color
// there was no variable for this...
.action-sheet-ios .action-sheet-cancel {
	color: map-get($colors, dark);
}

/* Circular Progress */

.radial-progress {
	$circle-size: 30px;
	$circle-color: #ffffff;
	$circle-background: transparentize($circle-color, 0.7);
	$inset-size: 24px;
	$inset-color: map-get($colors, dark_grey);
	$transition-length: 1s;

	width:  $circle-size;
	height: $circle-size;

	background-color: $circle-background;
	border-radius: 50%;
	border: none;

	position: absolute;
	top: 50%;
	left: 50%;
	margin: ($circle-size / -2) 0 0 ($circle-size / -2);

	.circle {
		.mask, .fill {
			width:    $circle-size;
			height:   $circle-size;
			position: absolute;
			border-radius: 50%;

			-webkit-backface-visibility: hidden;
			transition: -webkit-transform $transition-length;
			transition: -ms-transform $transition-length;
			transition: transform $transition-length;
			border-radius: 50%;
		}
		.mask {
			clip: rect(0px, $circle-size, $circle-size, $circle-size/2);
			.fill {
				clip: rect(0px, $circle-size/2, $circle-size, 0px);
				background-color: $circle-color;
			}
		}
	}

	.inset {
		width:       $inset-size;
		height:      $inset-size;
		position:    absolute;
		margin-left: ($circle-size - $inset-size)/2;
		margin-top:  ($circle-size - $inset-size)/2;

		background-color: $inset-color;
		border-radius: 50%;
	}

	&:focus {
		outline: none;
	}

	$i: 0;
	$increment: 180deg / 100;
	@for $i from 1 through 100 {
		&[data-progress="#{$i}"] {
			.circle {
				.mask.full, .fill {
					-webkit-transform: rotate($increment * $i);
					-ms-transform: rotate($increment * $i);
					transform: rotate($increment * $i);
				}
				.fill.fix {
					-webkit-transform: rotate($increment * $i * 2);
					-ms-transform: rotate($increment * $i * 2);
					transform: rotate($increment * $i * 2);
				}
			}
		}
	}
}

.radial-progress--inverse {
	$circle-color: map-get($colors, grey);
	$circle-background: transparentize(map-get($colors, dark_grey), 0.7);
	$inset-color: map-get($colors, other_grey);

	background-color: $circle-background;

	.circle .mask .fill {
		background-color: $circle-color;
	}

	.inset {
		background-color: $inset-color;
	}
}

// -----------------------------------------------------------
// The following is a bugfix for headers inside of components on ios
// This is a copy of a code snippet from the ionic code, but removing a >
// to allow deeper nesting.
// -----------------------------------------------------------

.ios ion-nav > .ion-page .toolbar.statusbar-padding:first-child,
.ios ion-nav > .ion-page ion-header > .toolbar.statusbar-padding:first-child,
.ios ion-tab > .ion-page ion-header > .toolbar.statusbar-padding:first-child,
.ios ion-tabs > .ion-page.tab-subpage ion-header > .toolbar.statusbar-padding:first-child,
.ios ion-menu > .menu-inner .toolbar.statusbar-padding:first-child,
.ios ion-menu > .menu-inner ion-header > .toolbar.statusbar-padding:first-child {
	padding-top: calc(20px + 4px);
	min-height: calc(44px + 20px);
}

.ios ion-nav > .ion-page ion-content.statusbar-padding:first-child .scroll-content,
.ios ion-nav > .ion-page ion-header > ion-content.statusbar-padding:first-child .scroll-content,
.ios ion-tab > .ion-page ion-header > ion-content.statusbar-padding:first-child .scroll-content,
.ios ion-tabs > .ion-page.tab-subpage ion-header > ion-content.statusbar-padding:first-child .scroll-content,
.ios ion-menu > .menu-inner ion-content.statusbar-padding:first-child .scroll-content,
.ios ion-menu > .menu-inner ion-header > ion-content.statusbar-padding:first-child .scroll-content {
	padding-top: 20px;
}

.ios ion-nav > .ion-page ion-content.statusbar-padding:first-child[padding] .scroll-content,
.ios ion-nav > .ion-page ion-content.statusbar-padding:first-child[padding-top] .scroll-content,
.ios ion-nav > .ion-page ion-header > ion-content.statusbar-padding:first-child[padding] .scroll-content,
.ios ion-nav > .ion-page ion-header > ion-content.statusbar-padding:first-child[padding-top] .scroll-content,
.ios ion-tab > .ion-page ion-header > ion-content.statusbar-padding:first-child[padding] .scroll-content,
.ios ion-tab > .ion-page ion-header > ion-content.statusbar-padding:first-child[padding-top] .scroll-content,
.ios ion-tabs > .ion-page.tab-subpage ion-header > ion-content.statusbar-padding:first-child[padding] .scroll-content,
.ios ion-tabs > .ion-page.tab-subpage ion-header > ion-content.statusbar-padding:first-child[padding-top] .scroll-content,
.ios ion-menu > .menu-inner ion-content.statusbar-padding:first-child[padding] .scroll-content,
.ios ion-menu > .menu-inner ion-content.statusbar-padding:first-child[padding-top] .scroll-content,
.ios ion-menu > .menu-inner ion-header > ion-content.statusbar-padding:first-child[padding] .scroll-content,
.ios ion-menu > .menu-inner ion-header > ion-content.statusbar-padding:first-child[padding-top] .scroll-content {
	padding-top: calc(16px + 20px);
}

.ios ion-nav > .ion-page .toolbar.statusbar-padding:first-child ion-segment,
.ios ion-nav > .ion-page .toolbar.statusbar-padding:first-child ion-title,
.ios ion-nav > .ion-page ion-header > .toolbar.statusbar-padding:first-child ion-segment,
.ios ion-nav > .ion-page ion-header > .toolbar.statusbar-padding:first-child ion-title,
.ios ion-tab > .ion-page ion-header > .toolbar.statusbar-padding:first-child ion-segment,
.ios ion-tab > .ion-page ion-header > .toolbar.statusbar-padding:first-child ion-title,
.ios ion-tabs > .ion-page.tab-subpage ion-header > .toolbar.statusbar-padding:first-child ion-segment,
.ios ion-tabs > .ion-page.tab-subpage ion-header > .toolbar.statusbar-padding:first-child ion-title,
.ios ion-menu > .menu-inner .toolbar.statusbar-padding:first-child ion-segment,
.ios ion-menu > .menu-inner .toolbar.statusbar-padding:first-child ion-title,
.ios ion-menu > .menu-inner ion-header > .toolbar.statusbar-padding:first-child ion-segment,
.ios ion-menu > .menu-inner ion-header > .toolbar.statusbar-padding:first-child ion-title {
	padding-top: 20px;
	height: calc(44px + 20px);
	min-height: calc(44px + 20px);
}
